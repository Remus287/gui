# Arduino Sensors

# Analog v Digital

Analog produces continuous signals and propostual to measurand (quantity to be measured)

i.e. accelerometers, light, sound, temperature, pressure.

**_known analog sensor (that i have):_** Photo Resistor, LM35 Temp sensor

Digital sensors process measurements as bits or digitally. They replacing analog sensors but do not provide continuous signal but can convert signals into digital signals. 

i.e. DS1620 temeprature sensors

Row of each input is laid on Arduino Uno: 0-13 (digital) and A0-A5 (analog).

# More on Analog

While digital signals are discrete, analog are time-varying voltages. The maximum and minimum amplitudes or the range is limited by the power source.

# ADC 

Inputs analog but would output digital. It would exist between sensor and microcontroller. 

Reference voltage is maximum value ADC can convert:
resolution = Vref / (2^n -1)
dig_output = Vin/Res

Requires also analogRead(pin) and analogreference(type).

**N.B. Teensy, Arduino Uno, and already some sensors (i.e. DHT11) already has 10-bit ADC**

# I2C

Serial communication protocol and is synchronous to the clock signals. Has two lines for instructions and data: SDA, SCL. 

Has message that ack/nack bits and start/start condition. Then frames for address and data. 

Can support multiple primary/receivers, ack/nack, only two lines, etc but data frame is limited to 8 bits but slower than SPI. 

# Tutorial to Connect Analog Lm35 sensor

```
/* LM35 analog temperature sensor with Arduino example code. More info: https://www.makerguides.com */
// Define to which pin of the Arduino the output of the LM35 is connected:

#define sensorPin A0

void setup() {
  // Begin serial communication at a baud rate of 9600:
  Serial.begin(9600);
  
}
void loop() {
  // Get a reading from the temperature sensor:
  int reading = analogRead(sensorPin);
  
  // Convert the reading into voltage:
  float voltage = reading * (5000 / 1024.0);
  
  // Convert the voltage into the temperature in degree Celsius:
  float temperature = voltage / 10;
  
  // Print the temperature in the Serial Monitor:
  Serial.print(temperature);
  Serial.print(" \xC2\xB0"); // shows degree symbol
  Serial.println("C");
  delay(1000); // wait a second between readings
  
}
```

Sensor requires V+ (positive pin), Vout (temperature output), and GND (ground pin). It is oriented with flat side facing me.

Will milivolts and divide by 10 to get celsius. Will map range 0-maxVoltage to how many bits. For Arduino Uno, will map 0-5V to 0-1023 value because it has 10 bits. (2^10)

**N.B. Make sure port is correct and open serial monitor**

# Tutorial to Connect ADC HC-SR04 Ultrasonic Sensor

```
// ---------------------------------------------------------------- //
// Arduino Ultrasoninc Sensor HC-SR04
// Re-writed by Arbi Abdul Jabbaar
// Using Arduino IDE 1.8.7
// Using HC-SR04 Module
// Tested on 17 September 2019
// ---------------------------------------------------------------- //

#define echoPin 2 // attach pin D2 Arduino to pin Echo of HC-SR04
#define trigPin 3 //attach pin D3 Arduino to pin Trig of HC-SR04

// defines variables
long duration; // variable for the duration of sound wave travel
int distance; // variable for the distance measurement

void setup() {
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an OUTPUT
  pinMode(echoPin, INPUT); // Sets the echoPin as an INPUT
  Serial.begin(9600); // // Serial Communication is starting with 9600 of baudrate speed
  Serial.println("Ultrasonic Sensor HC-SR04 Test"); // print some text in Serial Monitor
  Serial.println("with Arduino UNO R3");
}

void loop() {
  // Clears the trigPin condition
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  
  // Sets the trigPin HIGH (ACTIVE) for 10 microseconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  
  // Calculating the distance
  distance = duration * 0.034 / 2; // Speed of sound wave divided by 2 (go and back)
  
  // Displays the distance on the Serial Monitor
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");
}

```

Emits 40,000 Hz sound through air and detect obstacle. Detects up to half a meter up to 0.3 cm. 

There's four pin: ground, power, echo, and trig. 

Trig pin must be set low-high to send eight pulses and distance is calculated and transmitted via echo pin.

# Tutorial to Connect ADC DHT11 sensor (not working)

```

// REQUIRES the following Arduino libraries:
// - DHT Sensor Library: https://github.com/adafruit/DHT-sensor-library
// - Adafruit Unified Sensor Lib: https://github.com/adafruit/Adafruit_Sensor

#include "DHT.h"

#define DHTPIN 2     // Digital pin connected to the DHT sensor

#define DHTTYPE DHT11   // DHT 11
//#define DHTTYPE DHT22   // DHT 22  (AM2302), AM2321
//#define DHTTYPE DHT21   // DHT 21 (AM2301)

// Connect pin 1 (on the left) of the sensor to +5V
// NOTE: If using a board with 3.3V logic like an Arduino Due connect pin 1
// to 3.3V instead of 5V!
// Connect pin 2 of the sensor to whatever your DHTPIN is
// Connect pin 4 (on the right) of the sensor to GROUND
// Connect a 10K resistor from pin 2 (data) to pin 1 (power) of the sensor

// Initialize DHT sensor.
// Note that older versions of this library took an optional third parameter to
// tweak the timings for faster processors.  This parameter is no longer needed
// as the current DHT reading algorithm adjusts itself to work on faster procs.

DHT dht(DHTPIN, DHTTYPE);

void setup() {
  Serial.begin(9600);
  Serial.println(F("DHTxx test!"));

  dht.begin();
}

void loop() {
  // Wait a few seconds between measurements.
  delay(2000);

  // Reading temperature or humidity takes about 250 milliseconds!
  // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
  float h = dht.readHumidity();
  
  // Read temperature as Celsius (the default)
  float t = dht.readTemperature();
  
  // Read temperature as Fahrenheit (isFahrenheit = true)
  float f = dht.readTemperature(true);

  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t) || isnan(f)) {
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }

  // Compute heat index in Fahrenheit (the default)
  float hif = dht.computeHeatIndex(f, h);
  
  // Compute heat index in Celsius (isFahreheit = false)
  float hic = dht.computeHeatIndex(t, h, false);

  Serial.print(F(" Humidity: "));
  Serial.print(h);
  Serial.print(F("%  Temperature: "));
  Serial.print(t);
  Serial.print(F("C "));
  Serial.print(f);
  Serial.print(F("F  Heat index: "));
  Serial.print(hic);
  Serial.print(F("C "));
  Serial.print(hif);
  Serial.println(F("F"));
}
```

Some versions provides relative humidity: amount of water vapor in air vs sautration which depends on temperature. RH = (pw/ps) * 100%. Detects vapor by measuring electrical resistance between electrodes (humidity is resistance)

Uses only one signal wire to transmit data and has a ground and power wire. 

**N.B. Note some have 4 pins which third pin is not used at all. (vestigial?)**

**N.B.2 Install DHT library by Rob Tillart**


# References

[https://www.elprocus.com/types-analog-digital-sensors/](url)

[https://iot4beginners.com/analog-sensors-vs-digital-sensors/](url)

[https://www.learnrobotics.org/blog/popular-arduino-sensors/](url)

[https://learn.sparkfun.com/tutorials/analog-vs-digital/all](url)

[https://www.makerguides.com/lm35-arduino-tutorial/](url)

[https://web.ics.purdue.edu/~jricha14/Port_Stuff/PortA_ADC.htm](url)

[https://www.circuitbasics.com/basics-of-the-i2c-communication-protocol/#:~:text=I2C%20is%20a%20serial%20communication,always%20controlled%20by%20the%20master.](url)

[https://learn.adafruit.com/dht](url)

[https://learn.sparkfun.com/tutorials/analog-to-digital-conversion/all#:~:text=The%20ADC%20on%20the%20Arduino,ADC%20works%20is%20fairly%20complex.](url)

[https://www.electronicwings.com/arduino/adc-in-arduino](url)

[https://create.arduino.cc/projecthub/abdularbi17/ultrasonic-sensor-hc-sr04-with-arduino-tutorial-327ff6](url)